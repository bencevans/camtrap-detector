name: "Release App"
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-app:
    defaults:
      run:
        shell: bash -el {0}

    environment: signing

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
          # M1
          - platform: macos-14
          - platform: windows-latest
          - platform: ubuntu-latest

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install MacOS System Dependencies
        run: brew install jq pkg-config && mkdir -p /Users/runner/lib && ln -s /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib /Users/runner/lib/libclang.dylib
        if: runner.os == 'macOS'

      - name: Install Linux System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-3 libdbus-1-dev libxi-dev libxtst-dev libgles2-mesa-dev libgtk-3-dev \
                                  libwebkit2gtk-4.0-dev librsvg2-dev
        if: runner.os == 'Linux'

      - name: Install Windows System Dependencies
        run: choco install -y wget
        if: runner.os == 'Windows'

      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Download Model (dynamic)
        run: wget -O md_v5a.0.0-dynamic.onnx https://github.com/bencevans/megadetector-onnx/releases/download/v0.2.0/md_v5a.0.0-dynamic.onnx

      - name: Build App
        run: npm ci && npm run tauri build -- --features updater
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - uses: actions/upload-artifact@v4
        if: ${{ env.ACTIONS_RUNNER_DEBUG }}
        with:
          name: CamTrap Detector MacOS Intel.dmg
          path: src-tauri/target/release/bundle/dmg/*.dmg

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          # APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          # APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          # APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          tauriScript: npm run tauri --
          args: --features updater
