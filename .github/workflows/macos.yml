name: 'Build MacOS'
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]

    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache Model
        id: cache-model
        uses: actions/cache@v3
        with:
          path: md_v5a.0.0.onnx
          key: model
      - name: Download Model
        run: wget -q https://static.bencevans.io/md_v5a.0.0.onnx
        if: steps.cache-model.outputs.cache-hit != 'true'
      
      
      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v3
        with:
          path: src-tauri/vendor/opencv/build
          key: ${{ runner.os }}-{{runner.arch}}-opencv
      - name: Build OpenCV
        run: mkdir -p src-tauri/vendor/opencv/build && cd src-tauri/vendor/opencv/build && cmake -DBUILD_SHARED_LIBS=off -DBUILD_LIST=core,dnn,imgcodecs -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=RELEASE -DWITH_OPENEXR=off -DWITH_TIFF=off -DWITH_WEBP=off -DWITH_OPENJPEG=off -DWITH_JASPER=off ..  && cmake --build . -j 8 && make install
        if: steps.cache-opencv.outputs.cache-hit != 'true'

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-{{runner.arch}}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build App
        run: npm install && npm run tauri build -- --features builtin

      - uses: actions/upload-artifact@v3
        with:
          name: MacOS App
          path: src-tauri/target/release/bundle/dmg/*.dmg

      # - uses: tauri-apps/tauri-action@v0
