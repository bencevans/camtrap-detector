name: "Build App"
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-app:
    defaults:
      run:
        shell: bash -el {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
          # M1
          - platform: macos-14
          - platform: windows-latest
          - platform: ubuntu-latest

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install System Dependencies
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libdbus-1-3 libdbus-1-dev libxi-dev libxtst-dev libgles2-mesa-dev libgtk-3-dev \
                                    libwebkit2gtk-4.0-dev librsvg2-dev jq clang
            sudo ln -fs libclang.so.1 /usr/lib/llvm-14/lib/libclang.so
          elif [ "$RUNNER_OS" = "Windows" ]; then
            choco install -y wget jq
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install jq pkg-config
            mkdir -p /Users/runner/lib
            ln -s /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib /Users/runner/lib/libclang.dylib
          fi

      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Disable Updater/Signing
        run: jq '.plugins.updater.active = false' src-tauri/tauri.conf.json > src-tauri/tauri.conf.json.tmp && mv src-tauri/tauri.conf.json.tmp src-tauri/tauri.conf.json

      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Download Model (dynamic)
        run: wget -O md_v5a.0.0-dynamic.onnx https://github.com/bencevans/megadetector-onnx/releases/download/v0.2.0/md_v5a.0.0-dynamic.onnx

      # - name: Build App
      #   run: npm ci && npm run tauri build

      - name: Run Rust Tests
        run: mkdir -p build && cd src-tauri && cargo test --locked -- --nocapture

      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
      #     APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
      #     APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      #     APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      #   with:
      #     tauriScript: npm run tauri --
      #     args: --features builtin
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
      #     releaseName: 'App v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false
